/*
 * –í—ã—á–∏—Å–ª–∏—Ç—å –∑–Ω–∞—á–µ–Ω–∏–µ –≤—ã—Ä–∞–∂–µ–Ω–∏—è –ø–æ —Ñ–æ—Ä–º—É–ª–µ
 * ((ùëè + ‚àö(ùëè^2 + 4*ùëé*ùëê)) / 2*ùëé) - ùëé^3*ùëê + ùëè^(‚àí2)
 * (–≤—Å–µ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ –ø—Ä–∏–Ω–∏–º–∞—é—Ç –¥–µ–π—Å—Ç–≤–∏—Ç–µ–ª—å–Ω—ã–µ –∑–Ω–∞—á–µ–Ω–∏—è)
 */

package by.java_online.module01.linear_program.task02;

public class Task02 {
    public static void main(String[] args) {
        double a;
        double b;
        double c;
        double result;

        a = 10.31;
        b = 2.14;
        c = 3.5;

        /*
         * –ü—Ä–æ–≤–µ—Ä—è–µ–º –∑–Ω–∞—á–µ–Ω–∏—è: (–º–æ–∂–µ–º –ª–∏ –º—ã —É–∑–Ω–∞—Ç—å —Ä–µ–∑—É–ª—å—Ç–∞—Ç
         * –±–µ–∑ –≤—ã—á–∏—Å–ª–µ–Ω–∏—è –∑–Ω–∞—á–µ–Ω–∏—è –≤—Å–µ–≥–æ –≤—ã—Ä–∞–∂–µ–Ω–∏—è), —Ç.–∫. –ø–æ —Å—Ç–∞–Ω–¥–∞—Ä—Ç—É
         * IEEE 754 –≤—ã–¥–µ–ª–µ–Ω–∏–µ –∫–≤–∞–¥—Ä–∞—Ç–Ω–æ–≥–æ –∫–æ—Ä–Ω—è –∏–∑ –æ—Ç—Ä–∏—Ü–∞—Ç–µ–ª—å–Ω–æ —á–∏—Å–ª–∞ –∏–ª–∏
         * –¥–µ–ª–µ–Ω–∏–µ 0/0 –¥–∞–µ—Ç NaN, –∞ –¥–µ–ª–µ–Ω–∏–µ –Ω–∞ 0 –¥–∞–µ—Ç –±–µ—Å–∫–æ–Ω–µ—á–Ω–æ—Å—Ç—å.
         */

        double partToCheck; // –†–µ–∑—É–ª—å—Ç–∞—Ç –≤—ã—Ä–∞–∂–µ–Ω–∏—è –≤–Ω—É—Ç—Ä–∏ –∫–æ—Ä–Ω—è –∫–≤–∞–¥—Ä–∞—Ç–Ω–æ–≥–æ
        partToCheck = Math.pow(b, 2) + 4 * a * c;

        if (partToCheck < 0) {
            System.out.println("You're trying to calculate a square root " +
                                "of a negative number. The calculation result " +
                                "will be NaN (Not a Number).");

        } else if (b < 0 & a == 0) {
            System.out.println("You're trying to divide 0 into 0 " +
                                "(b < 0 and a = 0). The calculation result will " +
                                "be NaN (Not a Number).");

        } else if (a == 0 | b == 0) {
            System.out.println("You're trying to divide 0. " +
                                "The calculation result will be Infinity.");

        } else {
            result = ((b + Math.sqrt(partToCheck)) / (2 * a)) -
                     Math.pow(a, 3) * c + Math.pow(b, -2);

            System.out.println("The expression value = " + result);
        }
    }
}
